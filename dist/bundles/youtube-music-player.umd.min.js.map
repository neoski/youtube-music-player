{
  "version": 3,
  "file": "youtube-music-player.umd.min.js",
  "sources": [
    "ng://youtube-music-player/out/src/app/youtube-music-player/youtube-music-player.service.ts",
    "ng://youtube-music-player/out/src/app/youtube-music-player/youtube-music-player.component.ts",
    "ng://youtube-music-player/out/src/app/youtube-music-player/youtube-music-player.module.ts"
  ],
  "sourcesContent": [
    "import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\n@Injectable()\nexport class YoutubeMusicPlayerService {\n\n  public playlistSub = new BehaviorSubject<Array<string>>([]);\n  public indexSub = new BehaviorSubject<number>(0);\n  public errorSub = new BehaviorSubject<number>(0);\n  public playSub = new BehaviorSubject<boolean>(false);\n  public pauseSub = new BehaviorSubject<boolean>(false);\n  constructor() { }\n\n\n  public getErrorSub() {\n    return this.errorSub;\n  }\n\n  public setError(data: number) {\n    this.errorSub.next(data);\n  }\n\n  public setPlaylist(playlist: string[]) {\n    this.playlistSub.next(playlist);\n  }\n\n  public getPlaylistSub() {\n    return this.playlistSub;\n  }\n\n  public setIndex(index: number) {\n    this.indexSub.next(index);\n  }\n\n  public getIndexSub() {\n    return this.indexSub;\n  }\n\n  public getPlaySub() {\n    return this.playSub;\n  }\n\n  public getPauseSub() {\n    return this.pauseSub;\n  }\n\n  public play() {\n    this.playSub.next(true);\n  }\n\n  public pause() {\n    this.pauseSub.next(true);\n  }\n\n  public urlsToIds(playlist: string[]) {\n    playlist.map((url, i) => {\n      const res = /\\?v=([^\\/|\\?|\\=]+)/.exec(url);\n      if (res) {\n        playlist[i] = res[1];\n      }\n    });\n    return playlist;\n  }\n}\n",
    "import { Component, OnInit, OnDestroy, ElementRef, Renderer2, ViewChild, Input} from '@angular/core';\nimport { YoutubeMusicPlayerService } from './youtube-music-player.service';\n\ndeclare var YT: any; //coming from youtube js file\n\n\n@Component({\n  selector: 'app-youtube-music-player',\n  template: `<div id=\"ymp\" #ymp>\n  <div id=\"ympLeftPart\">\n    <div id=\"ympPrevious\" class=\"hidden\" #ympPrevious (click)=\"previousSong()\">↩</div>\n    <div id=\"ympLoading\" #ympLoading>\n      ...\n    </div>\n    <div id=\"ympPlay\">\n      <div id=\"buttonPause\" class=\"hidden\" (click)=\"pauseVideo()\" #buttonPause>◼</div>\n      <div id=\"buttonPlay\" class=\"hidden\" (click)=\"playVideo()\" #buttonPlay>▶</div>\n    </div>\n    <div id=\"ympNext\" class=\"hidden\" #ympNext (click)=\"nextSong()\">↪</div>\n    <div id=\"ympTitle\" #ympTitle></div>\n    <div id=\"ympError\" class=\"hidden\" #ympError></div>\n  </div>\n  <div id=\"ympBar\" #ympBar (click)=\"changePosition($event)\">\n      <div id=\"ympProgress\" #ympProgress></div>\n      <div id=\"ympBuffered\" #ympBuffered></div>\n  </div>\n  <div id=\"ympRightPart\">\n      <div id=\"ympTime\" #ympTime>00:00|00:00</div>\n      <input type=\"range\" id=\"soundBar\" #soundBar (change)=setVolume()/>\n      <div class=\"hidden\" id=\"youtubeVideo\"></div>\n  </div>\n</div>`,\n  styles: [`div#ymp .hidden{visibility:hidden;display:none!important}div#ymp{font-family:\"Trebuchet MS\",Helvetica,sans-serif;width:100%;height:17px;background-color:#000;color:#fff;line-height:14px;font-size:10px;padding-bottom:4px;display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex}div#ymp div#ympNext,div#ymp div#ympPrevious{position:relative;top:2px;font-size:12px;cursor:pointer;font-weight:700;padding-left:4px}div#ympLeftPart{padding-top:3px;padding-left:2px;display:-webkit-box;display:-ms-flexbox;display:flex}div#ympRightPart{padding-left:10px;padding-right:10px;float:right;display:-webkit-box;display:-ms-flexbox;display:flex}div#ymp #ympPlay div{font-size:10px;position:relative;top:0;cursor:pointer;padding-top:1px}div#ymp #ympPlay{margin-left:5px;display:inline-block;width:9px}div#ymp #ympLoading{position:relative;top:2px;left:14px}div#ymp #ympLoading img{height:15px;width:15px}div#ymp div#ympError,div#ymp div#ympTitle{margin-left:5px;margin-right:5px;margin-top:1px;display:inline-block;white-space:nowrap}div#ympBar{position:relative;width:100%;border:1px solid #fff;height:5px;background-color:#333;overflow:hidden;margin-top:6.5px;display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex}div#ymp div.ympBuffered{z-index:1;position:absolute;background-color:#666;width:0%;height:5px}div#ymp #ympProgress{z-index:2;position:absolute;width:2px;height:4px;border:1px solid #fff;background-color:#fff}div#ymp #soundBar{z-index:1;position:relative;display:inline-block;width:100px;background-color:#000;overflow:hidden;top:2px;margin-left:5px}div#ymp #soundValue{z-index:2;left:50%;position:absolute;width:3px;height:4px;border:1px solid #fff;border-radius:50%;background-color:#fff}div#ymp div#ympTime{padding-top:4px;padding-right:4px}`]\n})\nexport class YoutubeMusicPlayerComponent implements OnInit {\n  @ViewChild('ymp') ymp: ElementRef;\n  @ViewChild('buttonPlay') buttonPlay: ElementRef;\n  @ViewChild('buttonPause') buttonPause: ElementRef;\n  @ViewChild('ympBar') ympBar: ElementRef;\n  @ViewChild('soundBar') soundBar: ElementRef;\n  @ViewChild('ympProgress') ympProgress: ElementRef;\n  @ViewChild('ympBuffered') ympBuffered: ElementRef;\n  @ViewChild('ympTime') ympTime: ElementRef;\n  @ViewChild('ympPrevious') ympPrevious: ElementRef;\n  @ViewChild('ympNext') ympNext: ElementRef;\n  @ViewChild('ympLoading') ympLoading: ElementRef;\n  @ViewChild('ympTitle') ympTitle: ElementRef;\n  @ViewChild('ympError') ympError: ElementRef;\n  player: any;\n  duration: number;\n  durationInterval = null as any;\n  @Input() playlist = [] as string[];\n  @Input() autoplay = 0;\n  @Input() index = 0;\n\n  constructor(private ympService: YoutubeMusicPlayerService) {\n  }\n  ngOnInit() {\n    (window as any)['onYouTubeIframeAPIReady'] = () => {\n    this.player = new YT.Player('youtubeVideo', {\n        height: '0',\n        width: '0',\n        playerVars: { 'autoplay': 1, 'controls': 0,'autohide':0,'wmode':'opaque' },\n        events: {\n          'onReady': () => {\n            this.player.setVolume(50);\n\n            if (this.index !== 0) {\n              this.ympService.setIndex(this.index);\n            }\n            this.ympService.getIndexSub().subscribe((index) => {\n              this.index = index;\n              if (this.player.getPlayerState() !== 5) { // if player has been launched\n                this.startNewVideo(); // start at new index\n              }\n            });\n\n            if (this.playlist !== []) {\n              this.ympService.setPlaylist(this.playlist);\n            }\n            this.ympService.getPlaylistSub().subscribe((playlist) => {\n              this.playlist = playlist;\n              if (!this.autoplay) {\n                this.showButtonsAfterLoad(true);\n              } else {\n                this.startNewVideo();\n              }\n            });\n\n            this.ympService.getPlaySub().subscribe((val) => {\n              if (val) {\n                this.playVideo();\n              }\n            });\n\n            this.ympService.getPauseSub().subscribe((val) => {\n              if (val) {\n                this.pauseVideo();\n              }\n            });\n          },\n          'onStateChange': (e:any) => {\n            if (e.data === 0) { // if video finished\n              this.nextSong();\n            }\n            if (e.data === 1) { // if video just started or played after pause\n              const videoData = this.player.getVideoData();\n              this.ympTitle.nativeElement.innerHTML =\n              (videoData.title.length > 30 ? videoData.title.substr(0, 27) + '...' : videoData.title);\n              this.showButtonsAfterLoad();\n            }\n            if (e.data === 2) {\n              this.showButtonsAfterLoad(true);\n            }\n          },\n          'onError': (e:any) => {\n            this.ympLoading.nativeElement.className = 'hidden';\n            this.ympError.nativeElement.className = '';\n            this.ympError.nativeElement.innerHTML =\n              ('Error at loading video (index ' +\n              this.index + ')');\n            this.ympService.setError(e.data);\n          }\n        }\n      });\n    };\n  }\n\n  ngOnDestroy() {\n    if (this.durationInterval) {\n      clearInterval(this.durationInterval);\n    }\n  }\n\n  setVolume() {\n    this.player.setVolume(this.soundBar.nativeElement.value);\n  }\n\n  nextSong() {\n    this.index = (this.index >= this.playlist.length - 1 ? 0 : this.index + 1);\n    this.ympTitle.nativeElement.innerHTML = '';\n    this.hideButtonsForLoad();\n    this.player.loadVideoById(this.playlist[this.index]);\n  }\n\n  previousSong() {\n    this.index = (this.index <= 0 ? this.playlist.length - 1 : this.index - 1);\n    this.ympTitle.nativeElement.innerHTML = '';\n    this.hideButtonsForLoad();\n    this.player.loadVideoById(this.playlist[this.index]);\n  }\n\n  updateTime(current:number, total:number) {\n    const currentMin = Math.floor(current / 60);\n    const currentSec = Math.floor(current % 60);\n    const totalMin = Math.floor(total / 60);\n    const totalSec = Math.floor(total % 60);\n    this.ympTime.nativeElement.innerHTML = \n    (currentMin < 10 ? '0' + currentMin : currentMin) + ':' +\n    (currentSec < 10 ? '0' + currentSec : currentSec) + '|' +\n    (totalMin < 10 ? '0' + totalMin : totalMin) + ':' +\n    (totalSec < 10 ? '0' + totalSec : totalSec);\n  }\n\n  updateBar () {\n    const currentTime = this.player.getCurrentTime();\n    this.duration = this.player.getDuration();\n    const buffered = this.player.getVideoLoadedFraction();\n    this.updateTime(currentTime, this.duration);\n    this.ympProgress.nativeElement.style.left = ((currentTime * 100) / this.duration) + '%';\n    this.ympBuffered.nativeElement.style.width = buffered * 100 + '%';\n  }\n\n  changePosition($event:any) {\n      const positionleft = ($event.offsetX * 100) / this.ympBar.nativeElement.offsetWidth;\n      this.player.seekTo((positionleft * this.duration) / 100, true);\n      this.updateBar();\n  }\n\n  startNewVideo() {\n    this.ympError.nativeElement.className = 'hidden';\n    this.hideButtonsForLoad();\n    this.player.loadVideoById(this.playlist[this.index]);\n  }\n\n  playVideo() {\n    if (this.player.getPlayerState() === 2) { //if paused\n      this.player.playVideo();\n    } else {\n      this.startNewVideo();\n    }\n  }\n\n  pauseVideo() {\n    this.player.pauseVideo();\n  }\n\n  hideButtonsForLoad() {\n    this.buttonPlay.nativeElement.className = 'hidden';\n    this.buttonPause.nativeElement.className = 'hidden';\n    this.ympPrevious.nativeElement.className = 'hidden';\n    this.ympNext.nativeElement.className = 'hidden';\n    this.ympLoading.nativeElement.className = '';\n    if (this.durationInterval) {\n      clearInterval(this.durationInterval);\n      this.durationInterval = false;\n    }\n  }\n\n  showButtonsAfterLoad (pause = false) {\n    if (pause) {\n      this.buttonPause.nativeElement.className = 'hidden';\n      this.buttonPlay.nativeElement.className = '';\n    } else {\n      this.buttonPause.nativeElement.className = '';\n      this.buttonPlay.nativeElement.className = 'hidden';\n      if (!this.durationInterval) {\n        this.durationInterval = setInterval(() => this.updateBar(), 100);\n      }\n    }\n    this.ympLoading.nativeElement.className = 'hidden';\n    this.ympPrevious.nativeElement.className = '';\n    this.ympNext.nativeElement.className = '';\n  }\n\n}\n",
    "import { NgModule } from '@angular/core';\nimport { YoutubeMusicPlayerComponent } from './youtube-music-player.component';\nimport { YoutubeMusicPlayerService } from './youtube-music-player.service';\n\n@NgModule({\n  declarations: [YoutubeMusicPlayerComponent],\n  exports: [YoutubeMusicPlayerComponent],\n  providers: [YoutubeMusicPlayerService]\n})\nexport class YoutubeMusicPlayerModule { }\n"
  ],
  "names": [
    "YoutubeMusicPlayerService",
    "this",
    "playlistSub",
    "BehaviorSubject",
    "indexSub",
    "errorSub",
    "playSub",
    "pauseSub",
    "prototype",
    "getErrorSub",
    "setError",
    "data",
    "next",
    "setPlaylist",
    "playlist",
    "getPlaylistSub",
    "setIndex",
    "index",
    "getIndexSub",
    "getPlaySub",
    "getPauseSub",
    "play",
    "pause",
    "urlsToIds",
    "map",
    "url",
    "i",
    "res",
    "exec",
    "type",
    "Injectable",
    "YoutubeMusicPlayerComponent",
    "ympService",
    "durationInterval",
    "autoplay",
    "ngOnInit",
    "_this",
    "player",
    "YT",
    "Player",
    "height",
    "width",
    "playerVars",
    "controls",
    "autohide",
    "wmode",
    "events",
    "onReady",
    "setVolume",
    "subscribe",
    "getPlayerState",
    "startNewVideo",
    "showButtonsAfterLoad",
    "val",
    "playVideo",
    "pauseVideo",
    "onStateChange",
    "e",
    "nextSong",
    "videoData",
    "getVideoData",
    "ympTitle",
    "nativeElement",
    "innerHTML",
    "title",
    "length",
    "substr",
    "onError",
    "ympLoading",
    "className",
    "ympError",
    "ngOnDestroy",
    "clearInterval",
    "soundBar",
    "value",
    "hideButtonsForLoad",
    "loadVideoById",
    "previousSong",
    "updateTime",
    "current",
    "total",
    "currentMin",
    "Math",
    "floor",
    "currentSec",
    "totalMin",
    "totalSec",
    "ympTime",
    "updateBar",
    "currentTime",
    "getCurrentTime",
    "duration",
    "getDuration",
    "buffered",
    "getVideoLoadedFraction",
    "ympProgress",
    "style",
    "left",
    "ympBuffered",
    "changePosition",
    "$event",
    "positionleft",
    "offsetX",
    "ympBar",
    "offsetWidth",
    "seekTo",
    "buttonPlay",
    "buttonPause",
    "ympPrevious",
    "ympNext",
    "setInterval",
    "Component",
    "args",
    "selector",
    "template",
    "styles",
    "ymp",
    "ViewChild",
    "Input",
    "YoutubeMusicPlayerModule",
    "NgModule",
    "declarations",
    "exports",
    "providers"
  ],
  "mappings": "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"
}
