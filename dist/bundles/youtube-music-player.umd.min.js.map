{
  "version": 3,
  "file": "youtube-music-player.umd.min.js",
  "sources": [
    "ng://youtube-music-player/out/src/youtube-music-player.service.ts",
    "ng://youtube-music-player/out/src/youtube-music-player.component.ts",
    "ng://youtube-music-player/out/src/youtube-music-player.module.ts"
  ],
  "sourcesContent": [
    "import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\n@Injectable()\nexport class YoutubeMusicPlayerService {\n\n  private playlistSub = new BehaviorSubject<Array<string>>([]);\n  private indexSub = new BehaviorSubject<number>(0);\n  private errorSub = new BehaviorSubject<number>(0);\n  private playSub = new BehaviorSubject<boolean>(false);\n  private pauseSub = new BehaviorSubject<boolean>(false);\n  private readySub = new BehaviorSubject<boolean>(false);\n  private scriptLoaded = false;\n  constructor() { }\n\n  public getReadySub() {\n    return this.readySub;\n  }\n\n  public getErrorSub() {\n    return this.errorSub;\n  }\n\n  public setError(data: number) {\n    this.errorSub.next(data);\n  }\n\n  public setPlaylist(playlist: string[]) {\n    this.playlistSub.next(playlist);\n  }\n\n  public getPlaylistSub() {\n    return this.playlistSub;\n  }\n\n  public setIndex(index: number) {\n    this.indexSub.next(index);\n  }\n\n  public getIndexSub() {\n    return this.indexSub;\n  }\n\n  public getPlaySub() {\n    return this.playSub;\n  }\n\n  public getPauseSub() {\n    return this.pauseSub;\n  }\n\n  public play() {\n    this.playSub.next(true);\n  }\n\n  public pause() {\n    this.pauseSub.next(true);\n  }\n\n  public urlsToIds(playlist: string[]) {\n    playlist.map((url, i) => {\n      const res = /\\?v=([^\\/|\\?|\\=]+)/.exec(url);\n      if (res) {\n        playlist[i] = res[1];\n      }\n    });\n    return playlist;\n  }\n\n  public isScriptLoaded() {\n    return this.scriptLoaded;\n  }\n\n  public scriptIsLoaded(value = true as boolean) {\n    this.scriptLoaded = true;\n  }\n\n  public resetSubscribers() {\n    this.playlistSub.unsubscribe();\n    this.indexSub.unsubscribe();\n    this.errorSub.unsubscribe();\n    this.playSub.unsubscribe();\n    this.pauseSub.unsubscribe();\n    this.readySub.unsubscribe();\n    this.playlistSub = new BehaviorSubject<Array<string>>([]);\n    this.indexSub = new BehaviorSubject<number>(0);\n    this.errorSub = new BehaviorSubject<number>(0);\n    this.playSub = new BehaviorSubject<boolean>(false);\n    this.pauseSub = new BehaviorSubject<boolean>(false);\n    this.readySub = new BehaviorSubject<boolean>(false);\n  }\n}\n",
    "import { AfterViewInit, Component, OnInit, OnDestroy, ElementRef, ViewChild, Input} from '@angular/core';\nimport { YoutubeMusicPlayerService } from './youtube-music-player.service';\n\ndeclare var YT: any; //coming from youtube script file\n\n@Component({\n  selector: 'app-youtube-music-player',\n  template: `<div id=\"ymp\" #ymp>\n  <div id=\"ympLeftPart\">\n    <div id=\"ympPrevious\" class=\"hidden\" #ympPrevious (click)=\"previousSong()\">↩</div>\n    <div id=\"ympLoading\" #ympLoading>\n      ...\n    </div>\n    <div id=\"ympPlay\">\n      <div id=\"buttonPause\" class=\"hidden\" (click)=\"pauseVideo()\" #buttonPause>◼</div>\n      <div id=\"buttonPlay\" class=\"hidden\" (click)=\"playVideo()\" #buttonPlay>▶</div>\n    </div>\n    <div id=\"ympNext\" class=\"hidden\" #ympNext (click)=\"nextSong()\">↪</div>\n    <div id=\"ympTitle\" #ympTitle></div>\n    <div id=\"ympError\" class=\"hidden\" #ympError></div>\n  </div>\n  <div id=\"ympBar\" #ympBar (click)=\"changePosition($event)\">\n      <div id=\"ympProgress\" #ympProgress></div>\n      <div id=\"ympBuffered\" #ympBuffered></div>\n  </div>\n  <div id=\"ympRightPart\">\n      <div id=\"ympTime\" #ympTime>00:00|00:00</div>\n      <input type=\"range\" id=\"soundBar\" #soundBar (change)=setVolume()/>\n      <div class=\"hidden\" id=\"youtubeVideo\"></div>\n  </div>\n</div>\n`,\n  styles: [`div#ymp .hidden{visibility:hidden;display:none!important}div#ymp{font-family:\"Trebuchet MS\",Helvetica,sans-serif;width:100%;height:17px;background-color:#000;color:#fff;line-height:14px;font-size:10px;padding-bottom:4px;display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex}div#ymp div#ympNext,div#ymp div#ympPrevious{position:relative;top:2px;font-size:12px;cursor:pointer;font-weight:700;padding-left:4px}div#ympLeftPart{padding-top:3px;padding-left:2px;display:-webkit-box;display:-ms-flexbox;display:flex}div#ympRightPart{padding-left:10px;padding-right:10px;float:right;display:-webkit-box;display:-ms-flexbox;display:flex}div#ymp #ympPlay div{font-size:10px;position:relative;top:0;cursor:pointer;padding-top:1px}div#ymp #ympPlay{margin-left:5px;display:inline-block;width:9px}div#ymp #ympLoading{position:relative;top:2px;left:14px}div#ymp #ympLoading img{height:15px;width:15px}div#ymp div#ympError,div#ymp div#ympTitle{margin-left:5px;margin-right:5px;margin-top:1px;display:inline-block;white-space:nowrap}div#ympBar{position:relative;width:100%;border:1px solid #fff;height:5px;background-color:#333;overflow:hidden;margin-top:6.5px;display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex}div#ymp div.ympBuffered{z-index:1;position:absolute;background-color:#666;width:0%;height:5px}div#ymp #ympProgress{z-index:2;position:absolute;width:2px;height:4px;border:1px solid #fff;background-color:#fff}div#ymp #soundBar{z-index:1;position:relative;display:inline-block;width:100px;background-color:#000;overflow:hidden;top:2px;margin-left:5px}div#ymp #soundValue{z-index:2;left:50%;position:absolute;width:3px;height:4px;border:1px solid #fff;border-radius:50%;background-color:#fff}div#ymp div#ympTime{padding-top:4px;padding-right:4px}`]\n})\n\nexport class YoutubeMusicPlayerComponent implements OnInit {\n  @ViewChild('ymp') ymp: ElementRef;\n  @ViewChild('buttonPlay') buttonPlay: ElementRef;\n  @ViewChild('buttonPause') buttonPause: ElementRef;\n  @ViewChild('ympBar') ympBar: ElementRef;\n  @ViewChild('soundBar') soundBar: ElementRef;\n  @ViewChild('ympProgress') ympProgress: ElementRef;\n  @ViewChild('ympBuffered') ympBuffered: ElementRef;\n  @ViewChild('ympTime') ympTime: ElementRef;\n  @ViewChild('ympPrevious') ympPrevious: ElementRef;\n  @ViewChild('ympNext') ympNext: ElementRef;\n  @ViewChild('ympLoading') ympLoading: ElementRef;\n  @ViewChild('ympTitle') ympTitle: ElementRef;\n  @ViewChild('ympError') ympError: ElementRef;\n  player = null as any;\n  duration: number;\n  durationInterval = null as any;\n  @Input() playlist = [] as string[];\n  @Input() autoplay = 0;\n  @Input() index = 0;\n  @Input() youtubeApiLink = 'https://www.youtube.com/iframe_api';\n\n  constructor(private ympService: YoutubeMusicPlayerService) {\n  }\n\n  loadScript() {\n    const node = document.createElement('script');\n    node.src = this.youtubeApiLink;\n    node.type = 'text/javascript';\n    document.getElementsByTagName('head')[0].appendChild(node);\n  }\n\n  ngOnInit() {\n    if (!this.ympService.isScriptLoaded()) { // load script once\n      this.loadScript();\n      this.ympService.scriptIsLoaded();\n      (window as any).onYouTubeIframeAPIReady = () => {\n          this.createPlayer();\n        };\n      } else {\n        this.createPlayer();\n      }\n  }\n\n  createPlayer () {\n    this.player = new YT.Player('youtubeVideo', {\n      height: '0',\n      width: '0',\n      playerVars: { 'autoplay': 1, 'controls': 0, 'autohide': 0},\n      events: {\n        'onReady': () => {\n          this.player.setVolume(50);\n          if (this.index !== 0) {\n            this.ympService.setIndex(this.index);\n          }\n          this.ympService.getIndexSub().subscribe((index) => {\n            this.index = index;\n            if (this.player.getPlayerState() !== 5) { // if player has been launched\n              this.startNewVideo(); // start at new index\n            }\n          });\n          if (this.playlist !== []) {\n            this.ympService.setPlaylist(this.playlist);\n          }\n          this.ympService.getPlaylistSub().subscribe((playlist) => {\n            this.playlist = playlist;\n            if (!this.autoplay) {\n              this.showButtonsAfterLoad(true);\n            } else {\n              this.startNewVideo();\n            }\n          });\n\n          this.ympService.getPlaySub().subscribe((val) => {\n            if (val && this.player) {\n              this.playVideo();\n            }\n          });\n\n          this.ympService.getPauseSub().subscribe((val) => {\n            if (val) {\n              this.pauseVideo();\n            }\n          });\n\n          this.ympService.getReadySub().next(true);\n        },\n        'onStateChange': (e: any) => {\n          if (e.data === 0) { // if video finished\n            this.nextSong();\n          }\n          if (e.data === 1) { // if video just started or played after pause\n            const videoData = this.player.getVideoData();\n            this.ympTitle.nativeElement.innerHTML =\n            (videoData.title.length > 30 ? videoData.title.substr(0, 27) + '...' : videoData.title);\n            this.showButtonsAfterLoad();\n          }\n          if (e.data === 2) {\n            this.showButtonsAfterLoad(true);\n          }\n        },\n        'onError': (e: any) => {\n          this.ympLoading.nativeElement.className = 'hidden';\n          this.ympError.nativeElement.className = '';\n          this.ympError.nativeElement.innerHTML =\n            ('Error at loading video (index ' +\n            this.index + ')');\n          this.ympService.setError(e.data);\n        }\n      }\n    });\n  }\n\n  setVolume() {\n    this.player.setVolume(this.soundBar.nativeElement.value);\n  }\n\n  nextSong() {\n    this.index = (this.index >= this.playlist.length - 1 ? 0 : this.index + 1);\n    this.ympTitle.nativeElement.innerHTML = '';\n    this.hideButtonsForLoad();\n    this.player.loadVideoById(this.playlist[this.index]);\n  }\n\n  previousSong() {\n    this.index = (this.index <= 0 ? this.playlist.length - 1 : this.index - 1);\n    this.ympTitle.nativeElement.innerHTML = '';\n    this.hideButtonsForLoad();\n    this.player.loadVideoById(this.playlist[this.index]);\n  }\n\n  updateTime(current:number, total:number) {\n    const currentMin = Math.floor(current / 60);\n    const currentSec = Math.floor(current % 60);\n    const totalMin = Math.floor(total / 60);\n    const totalSec = Math.floor(total % 60);\n    this.ympTime.nativeElement.innerHTML = \n    (currentMin < 10 ? '0' + currentMin : currentMin) + ':' +\n    (currentSec < 10 ? '0' + currentSec : currentSec) + '|' +\n    (totalMin < 10 ? '0' + totalMin : totalMin) + ':' +\n    (totalSec < 10 ? '0' + totalSec : totalSec);\n  }\n\n  updateBar () {\n    const currentTime = this.player.getCurrentTime();\n    this.duration = this.player.getDuration();\n    const buffered = this.player.getVideoLoadedFraction();\n    this.updateTime(currentTime, this.duration);\n    this.ympProgress.nativeElement.style.left = ((currentTime * 100) / this.duration) + '%';\n    this.ympBuffered.nativeElement.style.width = buffered * 100 + '%';\n  }\n\n  changePosition(e: any) {\n      const positionleft = (e.offsetX * 100) / this.ympBar.nativeElement.offsetWidth;\n      this.player.seekTo((positionleft * this.duration) / 100, true);\n      this.updateBar();\n  }\n\n  startNewVideo() {\n    this.ympError.nativeElement.className = 'hidden';\n    this.hideButtonsForLoad();\n    this.player.loadVideoById(this.playlist[this.index]);\n  }\n\n  playVideo() {\n    if (this.player.getPlayerState() === 2) { //if paused\n      this.player.playVideo();\n    } else if (this.player) {\n      this.startNewVideo();\n    }\n  }\n\n  pauseVideo() {\n    this.player.pauseVideo();\n  }\n\n  hideButtonsForLoad() {\n    this.buttonPlay.nativeElement.className = 'hidden';\n    this.buttonPause.nativeElement.className = 'hidden';\n    this.ympPrevious.nativeElement.className = 'hidden';\n    this.ympNext.nativeElement.className = 'hidden';\n    this.ympLoading.nativeElement.className = '';\n    if (this.durationInterval) {\n      clearInterval(this.durationInterval);\n      this.durationInterval = false;\n    }\n  }\n\n  showButtonsAfterLoad (pause = false) {\n    if (pause) {\n      this.buttonPause.nativeElement.className = 'hidden';\n      this.buttonPlay.nativeElement.className = '';\n    } else {\n      this.buttonPause.nativeElement.className = '';\n      this.buttonPlay.nativeElement.className = 'hidden';\n    }\n    this.ympLoading.nativeElement.className = 'hidden';\n    this.ympPrevious.nativeElement.className = '';\n    this.ympNext.nativeElement.className = '';\n    if (!this.durationInterval) {\n      this.durationInterval = setInterval(() => this.updateBar(), 100);\n    }\n  }\n\n  ngOnDestroy() {\n    this.player.destroy();\n    this.ympService.resetSubscribers();\n    if (this.durationInterval) {\n      clearInterval(this.durationInterval);\n      this.durationInterval = null;\n    }\n  }\n\n}\n",
    "import { NgModule } from '@angular/core';\nimport { YoutubeMusicPlayerComponent } from './youtube-music-player.component';\nimport { YoutubeMusicPlayerService } from './youtube-music-player.service';\n\n@NgModule({\n  declarations: [YoutubeMusicPlayerComponent],\n  exports: [YoutubeMusicPlayerComponent],\n  providers: [YoutubeMusicPlayerService]\n})\nexport class YoutubeMusicPlayerModule { }\n"
  ],
  "names": [
    "YoutubeMusicPlayerService",
    "this",
    "playlistSub",
    "BehaviorSubject",
    "indexSub",
    "errorSub",
    "playSub",
    "pauseSub",
    "readySub",
    "scriptLoaded",
    "prototype",
    "getReadySub",
    "getErrorSub",
    "setError",
    "data",
    "next",
    "setPlaylist",
    "playlist",
    "getPlaylistSub",
    "setIndex",
    "index",
    "getIndexSub",
    "getPlaySub",
    "getPauseSub",
    "play",
    "pause",
    "urlsToIds",
    "map",
    "url",
    "i",
    "res",
    "exec",
    "isScriptLoaded",
    "scriptIsLoaded",
    "value",
    "resetSubscribers",
    "unsubscribe",
    "type",
    "Injectable",
    "YoutubeMusicPlayerComponent",
    "ympService",
    "player",
    "durationInterval",
    "autoplay",
    "youtubeApiLink",
    "loadScript",
    "node",
    "document",
    "createElement",
    "src",
    "getElementsByTagName",
    "appendChild",
    "ngOnInit",
    "_this",
    "createPlayer",
    "onYouTubeIframeAPIReady",
    "YT",
    "Player",
    "height",
    "width",
    "playerVars",
    "controls",
    "autohide",
    "events",
    "onReady",
    "setVolume",
    "subscribe",
    "getPlayerState",
    "startNewVideo",
    "showButtonsAfterLoad",
    "val",
    "playVideo",
    "pauseVideo",
    "onStateChange",
    "e",
    "nextSong",
    "videoData",
    "getVideoData",
    "ympTitle",
    "nativeElement",
    "innerHTML",
    "title",
    "length",
    "substr",
    "onError",
    "ympLoading",
    "className",
    "ympError",
    "soundBar",
    "hideButtonsForLoad",
    "loadVideoById",
    "previousSong",
    "updateTime",
    "current",
    "total",
    "currentMin",
    "Math",
    "floor",
    "currentSec",
    "totalMin",
    "totalSec",
    "ympTime",
    "updateBar",
    "currentTime",
    "getCurrentTime",
    "duration",
    "getDuration",
    "buffered",
    "getVideoLoadedFraction",
    "ympProgress",
    "style",
    "left",
    "ympBuffered",
    "changePosition",
    "positionleft",
    "offsetX",
    "ympBar",
    "offsetWidth",
    "seekTo",
    "buttonPlay",
    "buttonPause",
    "ympPrevious",
    "ympNext",
    "clearInterval",
    "setInterval",
    "ngOnDestroy",
    "destroy",
    "Component",
    "args",
    "selector",
    "template",
    "styles",
    "ymp",
    "ViewChild",
    "Input",
    "YoutubeMusicPlayerModule",
    "NgModule",
    "declarations",
    "exports",
    "providers"
  ],
  "mappings": "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"
}
